{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","waitList","setWaitList","name","setName","num","setNum","opt","setOpt","confirmList","setConfirmList","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","names","index","onClick","newList","splice","handleDelete","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA6FeA,MAxFf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAQC,EAAR,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAsBN,mBAAS,IAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KAoBA,OAEE,sBAAKC,UAAU,OAAf,UACE,gDACA,uBAAMC,SAtBW,SAACC,GACpBA,EAAEC,iBACFZ,EAAY,GAAD,mBAAKD,GAAL,CAAeE,KAC1BC,EAAQ,IAAIE,EAAO,IAAIE,EAAO,KAmB5B,UACE,uBAAOO,KAAK,OAAOC,YAAY,aAAaC,MAAOd,EAAMe,SAAU,SAAAL,GAAC,OAAIT,EAAQS,EAAEM,OAAOF,QAAQN,UAAU,WAC3G,uBAAOI,KAAK,OAAOC,YAAY,qBAAqBC,MAAOZ,EAAKa,SAAU,SAAAL,GAAC,OAAIP,EAAOO,EAAEM,OAAOF,QAAQN,UAAU,WACjH,yBAAQA,UAAU,SAASM,MAAOV,EAAKW,SAAU,SAAAL,GAAC,OAAIL,EAAOK,EAAEM,OAAOF,QAAtE,UACE,wBAAQA,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,iBACA,wBAAQA,MAAM,IAAd,qBACA,wBAAQA,MAAM,IAAd,wBAEF,wBAAQF,KAAK,SAASJ,UAAU,SAAhC,oBAKF,8BACCV,EAASmB,OAAO,EACf,sBAAKT,UAAU,OAAf,UACA,2CACAV,EAASoB,KAAI,SAACC,EAAMC,GAAP,OACX,sBAAiBZ,UAAU,QAA3B,UACKW,EACD,uBAAOP,KAAK,SAASE,MAAM,SAASN,UAAU,SAASa,QAAS,kBArCvD,SAACD,GACpB,IAAIE,EAAUxB,EACdwB,EAAQC,OAAOH,EAAM,GACrBrB,EAAY,YAAIuB,IAkCgEE,CAAaJ,QAF7EA,MAMV,sBAAMX,SAnCI,SAACC,GACjBA,EAAEC,iBACFJ,EAAe,GAAD,mBAAKD,GAAL,CAAiBR,KAC/B2B,QAAQC,IAAIpB,IAgCN,SACE,uBAAOM,KAAK,SAASE,MAAM,cAAcN,UAAU,qBAErD,0BAGJ,gCACE,sDACA,gCCxDOmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78e876ac.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\n\n\nfunction App() {\n\n  const [ waitList, setWaitList ] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [num, setNum] = useState(\"\");\n  const [opt, setOpt] = useState(\"\");\n  const [confirmList, setConfirmList] = useState([]);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setWaitList([...waitList, name]);\n    setName('');setNum('');setOpt('');\n  };\n\n  const handleDelete = (index) =>{\n    var newList = waitList;\n    newList.splice(index,1);\n    setWaitList([...newList]);\n  }\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    setConfirmList([...confirmList,waitList]);\n    console.log(confirmList);\n  }\n\n  return (\n    \n    <div className='main'>\n      <h1 >Invitation App</h1>\n      <form onSubmit={handleSubmit}>\n        <input type='text' placeholder='Enter Name' value={name} onChange={e => setName(e.target.value)} className='inputs' /> \n        <input type='text' placeholder='Enter Phone Number' value={num} onChange={e => setNum(e.target.value)} className='inputs' />\n        <select className='inputs' value={opt} onChange={e => setOpt(e.target.value)}>\n          <option value=\"1\">VVIP</option>\n          <option value=\"2\">VIP</option>\n          <option value=\"3\">Special</option>\n          <option value=\"4\">General</option>\n        </select>\n        <button type='submit' className='inputs'>\n          Add\n       </button>\n      </form>\n\n      <div>\n      {waitList.length>0 ? \n        <div className=\"wait\">\n        <h2>Wait List</h2>\n       {waitList.map((names,index) => \n          <div key={index} className=\"list1\">\n              {names}\n              <input type=\"button\" value=\"Delete\" className=\"delete\" onClick={() => handleDelete(index)} />\n          </div>\n          )}\n          \n          <form onSubmit={handleAdd}>\n            <input type=\"submit\" value=\"Confirm Add\" className=\"delete addbtn \" />\n          </form> \n          <br />\n        </div>\n      : \n      <div>\n        <p>Add people to invite!</p>\n        <br />\n      </div>}\n      \n      {/* <div>\n      {confirmList.length>0 ? \n        {confirmList.map((names,index)=> (\n        <div key={index} className=\"list1\">\n          {names}\n        </div>)\n        )}\n          :\n          <p>Click on Confirm add to get a list of people coming</p>\n      }\n      </div> */}\n        </div>\n\n      </div>\n    )\n}\n\n  \n       \n  \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}